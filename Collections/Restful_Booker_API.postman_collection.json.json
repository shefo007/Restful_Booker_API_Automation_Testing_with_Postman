{
	"info": {
		"_postman_id": "5a535331-1bbb-4b75-a787-c84f8529fe5f",
		"name": "Restful Booker API",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Ping - HealthCheck",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1ae1b54d-45d5-4274-b768-049aca71ec87",
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "d5229d5b-fcc4-47e8-b2ab-203afebade6f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{baseURL}}/ping",
				"description": "A simple health check endpoint to confirm whether the API is up and running."
			},
			"response": []
		},
		{
			"name": "Auth - CreateToken",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5b254d85-f2bb-49ad-9538-92fc4bf67773",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"token\", response.token);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "d408aa92-5f84-4dea-a063-b177068f7296",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"username\" : \"{{username}}\",\r\n   \"password\" : \"{{password}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{baseURL}}/auth",
				"description": "Creates a new auth token to use for access to the PUT and DELETE /booking"
			},
			"response": []
		},
		{
			"name": "Booking - GetBookingIds",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ea091e28-a36c-47a7-a8f0-75460184bd40",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"console.log(pm.variables.get(\"bookingID\"));\r",
							"\r",
							"for (let i = 1; i <= response.length; i++) {\r",
							"\r",
							"   if (pm.variables.get(\"bookingID\") === undefined) {\r",
							"\r",
							"      pm.test(\"To CreateBooking request\", function () {\r",
							"         postman.setNextRequest(\"Booking - CreateBooking\");\r",
							"      });\r",
							"      break;\r",
							"\r",
							"   } else if (response[i].bookingid === pm.variables.get(\"bookingID\")) {\r",
							"\r",
							"      pm.test(\"Booking ID is found successfully\", function () {\r",
							"         postman.setNextRequest(\"Booking - GetBooking\")\r",
							"      });\r",
							"      break;\r",
							"\r",
							"   } else if ((response[i].bookingid !== pm.variables.get(\"bookingID\")) &&  i !== response.length) {\r",
							"\r",
							"      continue;\r",
							"\r",
							"   } else {\r",
							"      \r",
							"      pm.test(\"Booking ID is not found\", function () {\r",
							"         \r",
							"      });\r",
							"   }   \r",
							"}\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "4fad8681-6d0a-49c3-9ea6-58e9a39fbfc1",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/booking",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking"
					],
					"query": [
						{
							"key": "firstname",
							"value": "Ibrahim",
							"disabled": true
						}
					]
				},
				"description": "Returns the ids of all the bookings that exist within the API. Can take optional query strings to search and return a subset of booking ids."
			},
			"response": []
		},
		{
			"name": "Booking - CreateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "16d8f210-ab24-4f4f-b7da-04917cd43b57",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"pm.environment.set(\"bookingID\", response.bookingid);\r",
							"\r",
							"pm.test(\"Booking created successfully\", function () {\r",
							"   pm.expect(pm.environment.has(\"bookingID\")).to.equal(true);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(\"Booking - GetBookingIds\")\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "9090017b-c840-424f-bfea-48f6f2c80900",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"firstname\" : \"{{firstname}}\",\r\n   \"lastname\" : \"{{lastname}}\",\r\n   \"totalprice\" : {{totalprice}},\r\n   \"depositpaid\" : {{depositpaid}},\r\n   \"bookingdates\" : {\r\n      \"checkin\" : \"{{checkin}}\",\r\n      \"checkout\" : \"{{checkout}}\"\r\n   },\r\n   \"additionalneeds\" : \"{{additionalneeds}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{baseURL}}/booking",
				"description": "Creates a new booking in the API"
			},
			"response": []
		},
		{
			"name": "Booking - GetBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4816d92b-b0a5-4536-82e6-9333049fd7f6",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Check firstname & lastname created successfully\", function () {\r",
							"   \r",
							"   pm.expect(response.firstname).to.eql(pm.variables.get(\"firstname\"));\r",
							"   pm.expect(response.lastname).to.eql(pm.variables.get(\"lastname\"));\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "476c6581-1928-4488-84ac-5aebd89dc89c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/:id",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{bookingID}}",
							"type": "string"
						}
					]
				},
				"description": "Returns a specific booking based upon the booking id provided."
			},
			"response": []
		},
		{
			"name": "Booking - PartialUpdateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d1018991-bcaf-49d8-a39c-b99f8c2dd40e",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"firstname & lastname changed successfully\", function () {\r",
							"   var jsonData = pm.response.json();\r",
							"   pm.expect(jsonData.firstname).to.eql(\"Ahmed\");\r",
							"   pm.expect(jsonData.lastname).to.eql(\"Hassan\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "43aa0fcf-3488-4634-969b-5f084c2ec315",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"firstname\": \"Ahmed\",\r\n   \"lastname\": \"Hassan\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/booking/:id",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{bookingID}}",
							"type": "string"
						}
					]
				},
				"description": "Updates a current booking with a partial payload"
			},
			"response": []
		},
		{
			"name": "Booking - UpdateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ca5d9d7a-0db5-45fb-81a2-08d8e4f753cb",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Booking ubdated successfully\", function () {\r",
							"   var jsonData = pm.response.json();\r",
							"   pm.expect(jsonData.firstname).to.eql(\"Sherif Tawap\");\r",
							"   pm.expect(jsonData.lastname).to.eql(\"Mohamed\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "c1215fa1-fef5-4c85-afb7-ce1d6e7e78ed",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"firstname\" : \"Sherif Tawap\",\r\n   \"lastname\" : \"Mohamed\",\r\n   \"totalprice\" : 100,\r\n   \"depositpaid\" : true,\r\n   \"bookingdates\" : {\r\n      \"checkin\" : \"2023-02-01\",\r\n      \"checkout\" : \"2023-02-25\"\r\n   },\r\n   \"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/booking/:id",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{bookingID}}",
							"type": "string"
						}
					]
				},
				"description": "Updates a current booking"
			},
			"response": []
		},
		{
			"name": "Booking - DeleteBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "59a2445b-c3a1-4b12-a767-b19ea6050fa7",
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.environment.unset(\"bookingID\");\r",
							"\r",
							"pm.environment.unset(\"token\");\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "210e92b0-9831-433e-8238-023ff3642a93",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/booking/:id",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"booking",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{bookingID}}",
							"type": "string"
						}
					]
				},
				"description": "Returns the ids of all the bookings that exist within the API. Can take optional query strings to search and return a subset of booking ids."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "ee6128cf-ec1c-4c26-8a1a-0e6df598685d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "dd6f4414-d4a0-4214-9821-086bea38eb41",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}